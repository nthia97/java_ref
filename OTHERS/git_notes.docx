Version control
Local Version Control Systems---> Many people’s version-control method of choice is to copy files into another directory (perhaps a time-
stamped directory, if they’re clever)

Centralized Version Control Systems---> The next major issue that people encounter is that they need to collaborate with developers on other
systems. To deal with this problem, Centralized Version Control Systems (CVCSs) were developed. These
systems, such as CVS, Subversion, and Perforce, have a single server that contains all the versioned
files, and a number of clients that check out files from that central place.

Distributed Version Control Systems---> This is where Distributed Version Control Systems (DVCSs) step in. In a DVCS (such as Git, Mercurial,
Bazaar or Darcs), clients don’t just check out the latest snapshot of the files; rather, they fully mirror
the repository, including its full history. Thus, if any server dies, and these systems were collaborating
via that server, any of the client repositories can be copied back up to the server to restore it. Every
clone is really a full backup of all the data.
